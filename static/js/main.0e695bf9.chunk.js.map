{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","Date","toLocaleDateString","undefined","weekday","year","month","day","class","id","Math","round","temp_min","temp_max","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAKMA,G,YACC,oCADDA,EAEC,2CA0EQC,MAvEf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,KAkBb,OACE,qBAAKC,UAAmC,oBAAhBF,EAAQG,KAAyBH,EAAQG,KAAKC,KAAO,GAAM,MAAUJ,EAAQG,KAAKC,KAAO,GAAO,WAAa,cAAiB,cAAtJ,SACE,iCACE,qBAAKF,UAAU,aAAf,SACE,uBACEG,KAAK,OACLH,UAAU,aACVI,YAAY,aACZC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WAxBK,SAAAC,GACE,UAAZA,EAAIC,KACLC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,iCAAuDH,IACzDoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WAoBW,oBAAhBlB,EAAQG,KACf,gCACE,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BF,EAAQqB,KAAnC,KAA2CrB,EAAQsB,IAAIC,WACvD,qBAAKrB,UAAU,OAAf,UAAuB,IAAIsB,MAAOC,wBAAmBC,EAnBnD,CAACC,QAAS,OAAQC,KAAK,UAAWC,MAAM,OAAQC,IAAI,iBAqBxD,sBAAK5B,UAAU,cAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,mBAAf,SAAkC,mBAAG6B,MAAK,oBAAe/B,EAAQA,QAAQ,GAAGgC,GAAlC,kBAC1C,qBAAK9B,UAAU,UAAf,SACCF,EAAQA,QAAQ,GAAGG,UAGtB,uBACA,sBAAKD,UAAU,OAAf,UACE,qBAAKA,UAAU,MAAf,SAAsB+B,KAAKC,MAAMlC,EAAQG,KAAKC,QAAY,qBAAKF,UAAU,SAAf,kBAA+B,qBAAKA,UAAU,SAAf,eACzF,uBACA,sBAAKA,UAAU,WAAf,UAA2B+B,KAAKC,MAAMlC,EAAQG,KAAKgC,UAAnD,iBACA,qBAAKjC,UAAU,OACf,sBAAKA,UAAU,WAAf,UAA2B+B,KAAKC,MAAMlC,EAAQG,KAAKiC,UAAnD,0BAMN,sBAAKlC,UAAU,eAAf,UACE,qBAAKA,UAAU,WAAf,mCAGA,qBAAKA,UAAU,OAAf,+CC1DGmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0e695bf9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport 'weather-icons/css/weather-icons.css';\r\n\r\n\r\nconst api = {\r\n  key: \"ea0a788c803d1f0772c799a988c16294\",\r\n  base:\"https://api.openweathermap.org/data/2.5/\"\r\n}\r\n\r\nfunction App() {\r\n  const [query, setQuery] = useState('');\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const search = evt =>{\r\n    if(evt.key === \"Enter\"){\r\n      fetch(`${api.base}weather?q=${query}&units=imperial&appid=${api.key}`)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n          setWeather(result);\r\n          setQuery('')\r\n          console.log(result);\r\n        });    \r\n    }\r\n  }\r\n\r\n  const options={weekday: 'long', year:'numeric', month:'long', day:'numeric'};\r\n\r\n  return (\r\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 60) ? 'app' : ((weather.main.temp < 32)) ? 'app snow' : 'app morning') : 'app morning'}>\r\n      <main>\r\n        <div className=\"search-box\">\r\n          <input \r\n            type=\"text\" \r\n            className=\"search-bar\" \r\n            placeholder=\"Search ...\"\r\n            onChange={e => setQuery(e.target.value)}\r\n            value={query}\r\n            onKeyPress={search}\r\n            />\r\n        </div>\r\n        {(typeof weather.main != \"undefined\") ? (\r\n          <div>\r\n            <div className=\"location-box\">\r\n              <div className=\"location\">{weather.name}, {weather.sys.country}</div>\r\n              <div className=\"date\">{new Date().toLocaleDateString(undefined, options)}</div>\r\n            </div>\r\n            <div className=\"weather-box\">\r\n              <div className=\"weather-box-m\">\r\n                <div className=\"weather-icon-api\"><i class={`wi wi-owm-${weather.weather[0].id} display-4`}></i></div>\r\n                <div className=\"weather\">\r\n                {weather.weather[0].main}\r\n                </div>\r\n              </div>\r\n              <br></br>\r\n              <div className=\"temp\">\r\n                <div className=\"tem\">{Math.round(weather.main.temp)}</div><div className=\"degree\">°</div><div className=\"fahren\">F</div>\r\n                <br></br>\r\n                <div className=\"temp-min\">{Math.round(weather.main.temp_min)}°F↓</div>\r\n                <div className=\"vl\"></div>\r\n                <div className=\"temp-max\">{Math.round(weather.main.temp_max)}°F↑</div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"location-box\">\r\n            <div className=\"location\">\r\n              Welcome to WeatherApp\r\n            </div>\r\n            <div className=\"date\">\r\n              Please enter a city name\r\n            </div>\r\n          </div> \r\n          )}\r\n      </main>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}